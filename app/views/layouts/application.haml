!!!
%html
  %head
    %title= (Rails.env.development? ? 'DEV: ' : '') + (@page_title ? @page_title + " | Glowfic Constellation" : "Glowfic Constellation")

    / Meta
    %meta{charset: 'utf-8'}
    %meta{name: 'viewport', content: 'width=device-width'}
    = csrf_meta_tags

    / SEO canonical
    - if @meta_canonical.present?
      %link{rel: 'canonical', href: @meta_canonical}

    / OpenGraph embed data
    - if @meta_og.present?
      :ruby
        image_hash = @meta_og.fetch(:image, {
          src: asset_url('favicons/og-image-48x48.png'),
          type: 'image/png',
          alt: 'Three stars, colored green, purple and blue',
          width: '48',
          height: '48'
        })
      %meta{property: 'og:image', content: image_hash[:src]}
      - [:type, :alt, :width, :height].each do |prop|
        - if image_hash.key?(prop)
          %meta{property: "og:image:#{prop}", content: image_hash[prop]}

      %meta{property: 'og:type', content: 'website'}
      %meta{property: 'og:site_name', content: 'Glowfic Constellation'}

      %meta{property: 'og:url', content: @meta_og[:url]}
      %meta{property: 'og:title', content: @meta_og[:title]}
      %meta{property: 'og:description', content: @meta_og[:description]}

    / Stylesheets
    = stylesheet_link_tag 'application'
    - if current_user.try(:layout).present?
      = stylesheet_link_tag "layouts/#{current_user.layout}"

    / Favicons
    %meta{name: "apple-mobile-web-app-title", content: "Glowfic Constellation"}
    %meta{name: "application-name", content: "Glowfic Constellation"}
    %meta{name: "msapplication-config", content: asset_path('favicons/browserconfig.xml')}
    %meta{name: "theme-color", content: "#FFFFFF"}
    = favicon_link_tag 'favicons/favicon.ico'
    = favicon_link_tag 'favicons/favicon-32x32.png', type: 'image/png', rel: 'icon', sizes: '32x32'
    = favicon_link_tag 'favicons/favicon-16x16.png', type: 'image/png', rel: 'icon', sizes: '16x16'
    = favicon_link_tag 'favicons/apple-touch-icon.png', type: 'image/png', rel: 'apple-touch-icon', sizes: '180x180'
    %link{rel: 'mask-icon', href: asset_path('favicons/safari-pinned-tab.svg'), color: '#2B5797'}
    %link{rel: 'manifest', href: asset_path('favicons/manifest.json')}

    = include_gon
  %body
    #header
      - if logged_in?
        #user-info
          = link_to user_path(current_user) do
            - if current_user.avatar
              = image_tag current_user.avatar.url, class: 'icon', id: 'user-icon'
            - else
              .no-img
            #user-username= current_user.username
      #header-right
        #logo
          - unless logged_in?
            #header-links
              = link_to "Login", login_path
              %span &nbsp;|&nbsp;
              = link_to "Sign up", new_user_path
          = link_to root_path do
            = image_tag "layouts/logo.png", alt: 'Glowfic Constellation'
        #nav-top
          - if logged_in?
            %ul
              %li= link_to 'Account', edit_user_path(current_user)
              %li= link_to 'Inbox', messages_path
              %li= link_to "Characters", user_characters_path(current_user)
              %li= link_to "Galleries", user_galleries_path(current_user)
              %li= link_to 'Favorites', favorites_path
              %li= link_to "Post", new_post_path
            = link_to logout_path, method: :delete, id: :"header-logout" do
              = button_tag "Log out", class: 'button'
          - else
            = form_tag login_path, method: :post, id: 'header-form' do
              #header-forms
                = text_field_tag :username, params[:username], placeholder: "Username"
                = password_field_tag :password, params[:password], placeholder: "Password"
              #header-remember
                = check_box_tag :remember_me
                = label_tag :remember_me, "Remember Me"
              #header-buttons
                = submit_tag "Log in", class: 'button'
              #header-buttons-links
                = link_to "Sign up", new_user_path
                &nbsp;|&nbsp;
                = link_to "Forgot Password?", new_password_reset_path
      #nav-bottom
        %ul
          %li= link_to 'Continuities', boards_path
          %li= link_to 'Recently Updated', posts_path
          %li= link_to 'Search', search_posts_path
          %li= link_to 'Users', users_path
          %li= link_to 'Facecasts', facecasts_characters_path
          - if logged_in?
            %li= link_to 'Unread', unread_posts_path
            %li= link_to 'Replies Owed', owed_posts_path
          %li= link_to 'Contribute', contribute_path
          %li= link_to 'Tags', tags_path
          - if (day = DailyReport.unread_date_for(current_user)).present?
            %li
              = link_to report_path(id: :daily, day: day), style: 'text-shadow: 0 0 0.8em #F87, 0 0 0.8em #F87' do
                Daily Report
                %em= '(' + Date.parse(day).strftime("%b %d, %Y") + ')'
          - else
            %li= link_to 'Daily Report', report_path(id: :daily)
    - if content_for?(:breadcrumbs)
      .flash.breadcrumbs= content_for :breadcrumbs
    - if flash[:error].is_a?(Hash)
      .flash.error
        - if flash[:error].has_key? :image
          = image_tag flash[:error][:image], class: 'vmid'.freeze
        = flash[:error][:message]
        - if flash[:error].has_key? :array
          %ul
            - flash[:error][:array].each do |error|
              %li= error
      - flash.delete(:error)
    - flash.keys.each do |key|
      - if key == :pass
        .flash{class: 'error'.freeze}= flash[key].html_safe
      - else
        .flash{:class=>key}= flash[key]
    - if content_for?(:flashes)
      = content_for :flashes
    - if logged_in?
      - if current_user.messages.where(unread: true).exists?
        - current_user.messages.where(unread: true).each do |message|
          .flash.inbox
            New message from
            = message_sender(message)
            &ndash;
            = link_to message.unempty_subject, message_path(message)
    #content= yield

  = javascript_include_tag 'application'.freeze
  - (@javascripts || []).each do |javascript|
    = javascript_include_tag javascript
