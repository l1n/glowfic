%tr
  - klass = cycle('even', 'odd')
  - replies_count = post.reply_count
  %td.post-completed.vtop{class: [klass, (post.completed? ? 'post-complete' : 'post-incomplete')]}
    - if post.completed?
      = image_tag "icons/book.png", class: 'vmid', title: "Thread Complete"
    - if post.on_hiatus?
      = image_tag "icons/hourglass.png", class: 'vmid', title: "Thread On Hiatus"
    - if post.abandoned?
      = image_tag "icons/book_grey.png", class: 'vmid', title: "Thread Abandoned"
    - if !current_user.try(:hide_warnings) && post.has_content_warnings?
      = image_tag "icons/exclamation.png", class: 'vmid', title: "Content Warning: " + post.content_warnings.pluck(:name).join(', '), alt: '!'
  %td.post-subject.vtop{class: klass}
    - if logged_in?
      - if unread_post?(post, unread_ids) || (@show_unread && !opened_post?(post, opened_ids))
        = link_to unread_path(post) do
          = image_tag unread_img, class: 'vmid', title: 'First Unread'
      - elsif @show_unread
        = link_to unread_path(post) do
          = image_tag lastlink_img, class: 'vmid', title: 'First Unread'
    - if logged_in? && @opened_ids.present? && !@opened_ids.include?(post.id)
      %b= link_to post.subject, post_path(post), title: strip_tags(post.description)
    - else
      = link_to post.subject, post_path(post), title: strip_tags(post.description)
    - if !@hide_quicklinks && (!logged_in? || per_page > 0)
      - total_pages = (replies_count.to_f / per_page).ceil
      - if total_pages > 1
        = surround '[', ']' do
          - if total_pages <= 6
            - params = {}
            - total_pages.times do |index|
              - params[:page] = index + 1 unless index == 0
              = link_to (index + 1), post_path(post, params)
          - else
            = link_to 1, post_path(post)
            = link_to 2, post_path(post, page: 2)
            = link_to 3, post_path(post, page: 3)
            \...
            - (total_pages-2).upto(total_pages) do |index|
              = link_to (index), post_path(post, page: index)
  - unless local_assigns[:hide_continuity]
    %td.post-board.vtop{class: klass}= link_to post.board_name, board_path(post.board_id)
  %td.post-authors.vtop{class: klass}
    - authors = post.authors.sort_by { |author| author.username.downcase }
    - if authors.length < 4
      = authors.sort_by(&:deleted?).map { |author| user_link(author) }.join(', ').html_safe
    - else
      = link_to user_link(post.user)
      and
      = link_to "#{authors.length-1} others", stats_post_path(post)
  %td.width-70.post-replies.vtop{class: klass}= link_to replies_count, stats_post_path(post)
  - if logged_in? && local_assigns[:show_unread_count]
    %td.width-70.vtop{class: klass}
      - if @opened_ids.include?(post.id) && unread_ids.include?(post.id)
        = Reply.where(post_id: post.id).where('created_at > ?', post.last_read(current_user)).count
      - else
        \-
  %td.post-time.vtop{class: klass}
    = pretty_time(post.tagged_at)
    by
    - if post.last_user.deleted?
      (deleted user)
    - else
      = link_to post.last_user_name, user_path(post.last_user_id)
  - if local_assigns[:check_box_name]
    %td.padding-right-10{class: klass}= check_box_tag check_box_name, post.id, false, class: 'checkbox'
- if post.respond_to?(:index_description)
  %tr
    %td{class: klass}
    %td{class: klass, colspan: 5, style: 'padding-top: 0px;'}
      %span.details= sanitize_post_description(post.index_description).html_safe
